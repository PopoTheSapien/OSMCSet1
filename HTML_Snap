# This piece of code is designed to attempt opening a VNC connection and taking a snapshot of each instance.

import sys
import os
import shutil
import subprocess
import time
from subprocess import PIPE


# =================================================================================================================
# Constants
# =================================================================================================================

#scanfile = os.sep + os.path.join('home', 'pi', 'Pen', 'Scripts', 'Masscan', 'Results', 'Scan_ISP_VNC.txt')
debug = 0
port = '5900'
web = 0

# =================================================================================================================
# Add some colour to the output
# =================================================================================================================


def printcolour(stringput, colour):
    if colour == 'gr':
        print("\033[1;30m%s\033[1;m" %stringput)
    if colour == 'r':
        print("\033[1;31m%s\033[1;m" %stringput)
    if colour == 'g':
        print("\033[1;32m%s\033[1;m" %stringput)
    if colour == 'y':
        print("\033[1;33m%s\033[1;m" %stringput)
    if colour == 'b':
        print("\033[1;34m%s\033[1;m" %stringput)
    if colour == 'm':
        print("\033[1;35m%s\033[1;m" %stringput)
    if colour == 'cy':
        print("\033[1;36m%s\033[1;m" %stringput)
    if colour == 'w':
        print("\033[1;37m%s\033[1;m" %stringput)
    if colour == 'cr':
        print("\033[1;38m%s\033[1;m" %stringput)


def GetIP(row):

    first = row.find(port) + port.__len__() + 1
    second = row.find(' ', row.find(port) + port.__len__() + 1)
    length = second - first
    # printcolour(first.__str__() + ' ' + second.__str__(), 'b')
    return row[first:first + length]


# ======================================================================================================================
def vnc():

    out = ''
    err = ''

    if debug == 1:
        printcolour(scanfile, 'cy')

    file = open(scanfile, 'r')

    ip = GetIP(file.readline())
    ip = GetIP(file.readline())

    while ip != '':

        printcolour(ip, 'cy')
        revisit = 0

        # Take a snappy
        # --------------------------------------------------------------------------------------------------------------

        snapexecpath = 'timeout 3 vncsnapshot ' + ip + ' /home/pi/Pen/VNCScreens/' + ip + '.png'

        if debug == 1:
            printcolour(snapexecpath, 'cy')

        try:
            takesnap = subprocess.Popen([snapexecpath], shell=True, stderr=PIPE, stdout=PIPE, bufsize=1)
        except:
            printcolour('Done Reading: ' + ip, 'r')

        out = ''
        err = ''
        (out, err) = takesnap.communicate()
        if err != '':
            printcolour(err, 'r')
        if out != '':
            printcolour(out, 'y')

        if err.find('No authentication needed') != -1:
            printcolour('Hmmmmm....', 'y')
            revisit = 1

        takesnap.wait()

        #revisit = 0
        if revisit == 1:
            printcolour('Taking closer look....', 'y')
            snapexecpath = 'timeout 120 vncsnapshot -debug ' + ip + ' /home/pi/Pen/VNCScreens/' + ip + '.png'
            try:
                takesnap = subprocess.Popen([snapexecpath], shell=True, stderr=PIPE, stdout=PIPE, bufsize=1)
            except:
                printcolour('Error Occurred', 'r')

        takesnap.wait()

        ip = GetIP(file.readline())

    printcolour("No IP Found in the line, turning off..", 'r')

    file.close()

# ======================================================================================================================
def webber():


    file = open(scanfile, 'r')

    ip = GetIP(file.readline())
    ip = GetIP(file.readline())

    while ip.find(port) != -1:

        printcolour(ip, 'cy')

        snapexecpath = ('xvfb-run --auto-servernum --server-num=1 --server-args="-screen 0, 1280x1200x24" cutycapt --url="http://"' + ip + ' ')
        snapexecthing = ('--javascript=on --out=/home/pi/Pen/VNCScreens/' + ip + '.png --delay=3000')

        if debug == 1:
            printcolour(snapexecpath + snapexecthing, 'cy')

        takesnap = subprocess.check_output([snapexecpath + snapexecthing], shell=True)

        time.sleep(1)
        ip = GetIP(file.readline())


    printcolour("No IP Found in the line, turning off..", 'r')

    file.close()

# ----------------------------------------------------------------------------------------------------------------------
# Main
# ----------------------------------------------------------------------------------------------------------------------

for arg in sys.argv:

    if arg == 'web':
        web = 1
    else:
        web = 0
    if arg.find('/') != -1:
        scanfile = arg
        inputfound = 1

printcolour(scanfile, 'cy')

if inputfound != 1:
    exit(2)

if web == 0:
    vnc()

if web == 1:
    webber()

exit()
